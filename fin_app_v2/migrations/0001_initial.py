# Generated by Django 5.1.4 on 2025-09-02 22:55

import django.core.validators
import django.db.models.deletion
import fin_app_v2.models_crm
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CrmJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('full_name', models.CharField(blank=True, default='', max_length=255, verbose_name='ФИО')),
                ('phone_number', models.CharField(blank=True, default='', max_length=32, verbose_name='Номер телефона')),
                ('position', models.CharField(blank=True, choices=[('Менеджер', 'Менеджер'), ('Директор', 'Директор')], default='', max_length=32, verbose_name='Позиция')),
                ('client_company_name', models.CharField(blank=True, default='', max_length=255, verbose_name='Название клиентской компании')),
                ('client_company_phone', models.CharField(blank=True, default='', max_length=32, verbose_name='Номер телефона клиентской компании')),
                ('client_company_address', models.CharField(blank=True, default='', max_length=255, verbose_name='Адрес клиентской компании')),
                ('client_website', models.CharField(blank=True, default='', max_length=255, verbose_name='Адрес веб-сайта')),
                ('status', models.CharField(choices=[('АКБ', 'АКБ'), ('ОКБ', 'ОКБ')], default='АКБ', max_length=8, verbose_name='Статус')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('client_email', models.EmailField(max_length=254, unique=True)),
                ('client_password', models.CharField(max_length=100)),
                ('over_all_income', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Varonka',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='VaronkaTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CrmTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('task_type', models.CharField(choices=[('SIMPLE', 'Обычная'), ('FEEDBACK', 'Обратная связь'), ('MEETING', 'Встреча')], default='SIMPLE', max_length=20)),
                ('assigned_to', models.CharField(blank=True, default='', max_length=255)),
                ('subtasks', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crm_tasks', to='fin_app_v2.crmjob')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CrmTaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crm_comments', to='fin_app_v2.crmtask')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CrmTaskFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=fin_app_v2.models_crm.crm_task_file_path, validators=[fin_app_v2.models_crm.validate_file_size, fin_app_v2.models_crm.validate_file_type, django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'txt', 'csv', 'xls', 'xlsx', 'jpg', 'jpeg', 'png', 'gif', 'webp', 'zip', 'rar', 'ppt', 'pptx', 'mp4', 'avi', 'mov'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.CharField(blank=True, help_text='Email of uploader', max_length=255)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crm_files', to='fin_app_v2.crmtask')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='DeductionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deduction_amount', models.PositiveIntegerField()),
                ('deduction_date', models.DateTimeField(auto_now_add=True)),
                ('deducted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deduction_actions', to=settings.AUTH_USER_MODEL)),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deductions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='crmjob',
            name='existing_job',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crm_jobs', to='fin_app_v2.job', verbose_name='Связанная работа'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('hours', models.PositiveIntegerField(default=1)),
                ('description', models.TextField()),
                ('task_percentage', models.PositiveIntegerField()),
                ('progress', models.PositiveIntegerField(default=0)),
                ('start_date', models.DateField(auto_now_add=True, null=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('money_for_task', models.PositiveIntegerField(default=0)),
                ('paid', models.BooleanField(default=False)),
                ('assigned_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('task_type', models.CharField(choices=[('Обычная', 'Обычная'), ('Подписка', 'Подписка')], default='Обычная', max_length=10)),
                ('task_status', models.CharField(choices=[('Бошланмади', 'Бошланмади'), ('Иш бошланди', 'Иш бошланди'), ('Текширишда', 'Текширишда'), ('Топшириш жараёнида ', 'Топшириш жараёнида '), ('Ёпилди', 'Ёпилди')], default='Бошланмади', max_length=20)),
                ('confirmed', models.BooleanField(default=False)),
                ('confirmation_date', models.DateTimeField(blank=True, null=True)),
                ('assigned_users', models.ManyToManyField(related_name='developer_tasks', to=settings.AUTH_USER_MODEL)),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_tasks', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='fin_app_v2.job')),
            ],
        ),
        migrations.CreateModel(
            name='VaronkaTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order', models.PositiveIntegerField(default=0)),
                ('description', models.TextField(blank=True, help_text='Detailed description of what this task involves')),
                ('is_required', models.BooleanField(default=True, help_text='Is this task mandatory?')),
                ('varonka', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='fin_app_v2.varonka')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('varonka', 'order')},
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('new', 'Новая'), ('in_progress', 'В работе'), ('done', 'Завершена')], default='new', max_length=32, verbose_name='Статус')),
                ('is_done', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('varonka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fin_app_v2.varonka')),
                ('current_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fin_app_v2.varonkatask')),
            ],
        ),
        migrations.CreateModel(
            name='VaronkaTemplateTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order', models.PositiveIntegerField(default=0)),
                ('description', models.TextField(blank=True)),
                ('is_required', models.BooleanField(default=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='template_tasks', to='fin_app_v2.varonkatemplate')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationTaskCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, help_text='Notes about task completion')),
                ('completed_by', models.CharField(blank=True, max_length=100)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_completions', to='fin_app_v2.application')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fin_app_v2.varonkatask')),
            ],
            options={
                'unique_together': {('application', 'task')},
            },
        ),
    ]
